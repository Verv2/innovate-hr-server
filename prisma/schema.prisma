// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String     @id @default(uuid())
  email              String     @unique
  password           String
  role               UserRole
  needPasswordChange Boolean    @default(true)
  status             UserStatus @default(ACTIVE)
  createdAt          DateTime   @default(now())
  updatedAt          DateTime   @updatedAt
  // admin              Admin?
  profile            Profile?

  @@map("users")
}

model Profile {
  id            String   @id @default(uuid())
  firstName     String
  lastName      String
  email         String   @unique
  profilePhoto  String?
  contactNumber String
  shiftStart    String // Default shift start time (HH:MM format)
  shiftEnd      String // Default shift end time (HH:MM format)
  isDeleted     Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  user           User            @relation(fields: [email], references: [email])
  shiftOverrides ShiftOverride[]

  @@map("profile")
}

model ShiftOverride {
  id         String   @id @default(uuid())
  date       DateTime @unique // Specific date when the shift is different
  shiftStart String // Override shift start time (HH:MM format)
  shiftEnd   String // Override shift end time (HH:MM format)

  profile   Profile @relation(fields: [profileId], references: [id])
  profileId String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("shift_override")
}

enum UserRole {
  SUPER_ADMIN
  ADMIN
  EMPLOYEE
}

enum UserStatus {
  ACTIVE
  BLOCKED
  DELETED
}
